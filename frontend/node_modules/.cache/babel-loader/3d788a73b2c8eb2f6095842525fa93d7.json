{"ast":null,"code":"import { fetchLogs } from '../api/index.js';\nimport { GET_ALL_LOGS, LOG_ERROR_OCCURRED } from '../constants/actions';\n\n// GET /logs\nexport const getLogs = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await fetchLogs();\n    dispatch({\n      type: GET_ALL_LOGS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: LOG_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: LOG_ERROR_OCCURRED,\n        payload: \"Log server is down!\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["fetchLogs","GET_ALL_LOGS","LOG_ERROR_OCCURRED","getLogs","dispatch","data","type","payload","error","response","message"],"sources":["C:/Users/Shrey Vegad/Desktop/GITHUB/Mock-Stocks/frontend/src/actions/logs.js"],"sourcesContent":["import { fetchLogs } from '../api/index.js';\r\nimport { GET_ALL_LOGS, LOG_ERROR_OCCURRED } from '../constants/actions';\r\n\r\n// GET /logs\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await fetchLogs();\r\n    dispatch({ type: GET_ALL_LOGS, payload: data });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: LOG_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: LOG_ERROR_OCCURRED, payload: \"Log server is down!\" });\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,YAAY,EAAEC,kBAAkB,QAAQ,sBAAsB;;AAEvE;AACA,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,SAAS,EAAE;IAClCI,QAAQ,CAAC;MAAEE,IAAI,EAAEL,YAAY;MAAEM,OAAO,EAAEF;IAAK,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;MAClBL,QAAQ,CAAC;QAAEE,IAAI,EAAEJ,kBAAkB;QAAEK,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;MAAQ,CAAC,CAAC;IAC9E,CAAC,MAAM;MACLN,QAAQ,CAAC;QAAEE,IAAI,EAAEJ,kBAAkB;QAAEK,OAAO,EAAE;MAAsB,CAAC,CAAC;IACxE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}