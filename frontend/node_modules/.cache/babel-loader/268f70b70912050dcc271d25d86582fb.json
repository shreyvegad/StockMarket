{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\Desktop\\\\GitClone\\\\StockMarket\\\\frontend\\\\src\\\\components\\\\PriceChart\\\\PriceChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceChart = props => {\n  _s();\n  const {\n    id,\n    legendDisplay,\n    xDisplay,\n    yDisplay,\n    socket,\n    ticker,\n    currPrice,\n    styleSet\n  } = props;\n  Chart.register(...registerables);\n  useEffect(() => {\n    let mounted = true;\n    const ctx = document.getElementById(id);\n    const data = {\n      labels: [currPrice.toFixed(2) || 0],\n      datasets: [{\n        data: [currPrice.toFixed(2) || 0],\n        label: 'Price',\n        backgroundColor: '#10B981',\n        borderColor: '#10B981'\n      }]\n    };\n    const optionsSet = {\n      animation: true,\n      plugins: {\n        legend: {\n          display: legendDisplay\n        }\n      },\n      responsive: true,\n      scales: {\n        x: {\n          display: xDisplay\n        },\n        y: {\n          display: yDisplay\n        }\n      }\n    };\n    const chartDrawn = new Chart(ctx, {\n      type: 'line',\n      data: data,\n      options: optionsSet\n    });\n    let prevMsg = currPrice;\n    socket.on(ticker, msg => {\n      if (mounted) {\n        let length = data.labels.length;\n        if (length >= 5) {\n          data.datasets[0].data.shift();\n          data.labels.shift();\n        }\n        if (msg > prevMsg) {\n          data.datasets[0].borderColor = '#10B981';\n          data.datasets[0].backgroundColor = '#10B981';\n        } else {\n          data.datasets[0].borderColor = '#EF4444';\n          data.datasets[0].backgroundColor = '#EF4444';\n        }\n        prevMsg = msg;\n        data.labels.push(new Date().getTime());\n        data.datasets[0].data.push(parseFloat(msg)).toFixed(2);\n        chartDrawn.update();\n      }\n    });\n    return () => {\n      mounted = false;\n      chartDrawn.destroy();\n    };\n  }, [id, legendDisplay, xDisplay, yDisplay, socket, ticker, currPrice]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styleSet,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(PriceChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PriceChart;\nexport default PriceChart;\nvar _c;\n$RefreshReg$(_c, \"PriceChart\");","map":{"version":3,"names":["React","useEffect","Chart","registerables","jsxDEV","_jsxDEV","PriceChart","props","_s","id","legendDisplay","xDisplay","yDisplay","socket","ticker","currPrice","styleSet","register","mounted","ctx","document","getElementById","data","labels","toFixed","datasets","label","backgroundColor","borderColor","optionsSet","animation","plugins","legend","display","responsive","scales","x","y","chartDrawn","type","options","prevMsg","on","msg","length","shift","push","Date","getTime","parseFloat","update","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shubham/Desktop/GitClone/StockMarket/frontend/src/components/PriceChart/PriceChart.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\nconst PriceChart = (props) => {\r\n  const { id, legendDisplay, xDisplay, yDisplay, socket, ticker, currPrice, styleSet } = props;\r\n  Chart.register(...registerables);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const ctx = document.getElementById(id);\r\n    const data = {\r\n      labels: [currPrice.toFixed(2) || 0],\r\n      datasets: [{\r\n        data: [currPrice.toFixed(2) || 0],\r\n        label: 'Price',\r\n        backgroundColor: '#10B981',\r\n        borderColor: '#10B981'\r\n      }]\r\n    }\r\n\r\n    const optionsSet = {\r\n      animation: true,\r\n      plugins: {\r\n        legend: {\r\n          display: legendDisplay\r\n        },\r\n      },\r\n      responsive: true,\r\n      scales: {\r\n        x: {\r\n          display: xDisplay\r\n        },\r\n        y: {\r\n          display: yDisplay\r\n        }\r\n      }\r\n    }\r\n\r\n    const chartDrawn = new Chart(ctx, {\r\n      type: 'line',\r\n      data: data,\r\n      options: optionsSet\r\n    });\r\n\r\n    let prevMsg = currPrice;\r\n    socket.on(ticker, msg => {\r\n      if (mounted) {\r\n        let length = data.labels.length;\r\n        if (length >= 5) {\r\n          data.datasets[0].data.shift()\r\n          data.labels.shift()\r\n        }\r\n        if(msg > prevMsg) {\r\n          data.datasets[0].borderColor = '#10B981';\r\n          data.datasets[0].backgroundColor = '#10B981';\r\n        } else {\r\n          data.datasets[0].borderColor = '#EF4444';\r\n          data.datasets[0].backgroundColor = '#EF4444';\r\n        }\r\n        prevMsg = msg;\r\n        data.labels.push(new Date().getTime())\r\n        data.datasets[0].data.push(parseFloat(msg)).toFixed(2);\r\n        chartDrawn.update()\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      mounted = false\r\n      chartDrawn.destroy();\r\n    }\r\n  }, [id, legendDisplay, xDisplay, yDisplay, socket, ticker, currPrice]);\r\n\r\n\r\n\r\n  return (\r\n    <div className={styleSet}>\r\n      <canvas id={id}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PriceChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}