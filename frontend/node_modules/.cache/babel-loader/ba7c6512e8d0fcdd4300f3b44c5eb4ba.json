{"ast":null,"code":"import { AUTH_ERROR_OCCURRED, MARKET_ERROR_OCCURRED, PURCHASED_ERROR_OCCURRED, USER_ERROR_OCCURRED, TRANSACTION_ERROR_OCCURRED, LOG_ERROR_OCCURRED } from '../constants/actions';\n\n// errors for authentication\nconst authErrorsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case AUTH_ERROR_OCCURRED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// errors for stock market\nconst marketErrorsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case MARKET_ERROR_OCCURRED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// errors for purchase details\nconst purchasedErrorsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PURCHASED_ERROR_OCCURRED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// errors for updating profile\nconst userErrorsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case USER_ERROR_OCCURRED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// errors for transactions\nconst transactionErrorsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case TRANSACTION_ERROR_OCCURRED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n// errors for action logs\nconst logsErrorsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case LOG_ERROR_OCCURRED:\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport { authErrorsReducer, marketErrorsReducer, purchasedErrorsReducer, userErrorsReducer, transactionErrorsReducer, logsErrorsReducer };","map":{"version":3,"names":["AUTH_ERROR_OCCURRED","MARKET_ERROR_OCCURRED","PURCHASED_ERROR_OCCURRED","USER_ERROR_OCCURRED","TRANSACTION_ERROR_OCCURRED","LOG_ERROR_OCCURRED","authErrorsReducer","state","arguments","length","undefined","action","type","payload","marketErrorsReducer","purchasedErrorsReducer","userErrorsReducer","transactionErrorsReducer","logsErrorsReducer"],"sources":["C:/Users/Shubham/Desktop/GitClone/StockMarket/frontend/src/reducers/error.js"],"sourcesContent":["import { AUTH_ERROR_OCCURRED, MARKET_ERROR_OCCURRED, PURCHASED_ERROR_OCCURRED, USER_ERROR_OCCURRED, TRANSACTION_ERROR_OCCURRED, LOG_ERROR_OCCURRED } from '../constants/actions';\r\n\r\n// errors for authentication\r\nconst authErrorsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case AUTH_ERROR_OCCURRED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// errors for stock market\r\nconst marketErrorsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case MARKET_ERROR_OCCURRED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// errors for purchase details\r\nconst purchasedErrorsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case PURCHASED_ERROR_OCCURRED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// errors for updating profile\r\nconst userErrorsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case USER_ERROR_OCCURRED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// errors for transactions\r\nconst transactionErrorsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case TRANSACTION_ERROR_OCCURRED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// errors for action logs\r\nconst logsErrorsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case LOG_ERROR_OCCURRED:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport { authErrorsReducer, marketErrorsReducer, purchasedErrorsReducer, userErrorsReducer, transactionErrorsReducer, logsErrorsReducer };\r\n"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,qBAAqB,EAAEC,wBAAwB,EAAEC,mBAAmB,EAAEC,0BAA0B,EAAEC,kBAAkB,QAAQ,sBAAsB;;AAEhL;AACA,MAAMC,iBAAiB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKZ,mBAAmB;MACtB,OAAOW,MAAM,CAACE,OAAO;IACvB;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA,MAAMO,mBAAmB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBP,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC7C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKX,qBAAqB;MACxB,OAAOU,MAAM,CAACE,OAAO;IACvB;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA,MAAMQ,sBAAsB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBR,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAChD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKV,wBAAwB;MAC3B,OAAOS,MAAM,CAACE,OAAO;IACvB;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA,MAAMS,iBAAiB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBT,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKT,mBAAmB;MACtB,OAAOQ,MAAM,CAACE,OAAO;IACvB;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA,MAAMU,wBAAwB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBV,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKR,0BAA0B;MAC7B,OAAOO,MAAM,CAACE,OAAO;IACvB;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;;AAED;AACA,MAAMW,iBAAiB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBX,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKP,kBAAkB;MACrB,OAAOM,MAAM,CAACE,OAAO;IACvB;MACE,OAAON,KAAK;EAAC;AAEnB,CAAC;AAED,SAASD,iBAAiB,EAAEQ,mBAAmB,EAAEC,sBAAsB,EAAEC,iBAAiB,EAAEC,wBAAwB,EAAEC,iBAAiB"},"metadata":{},"sourceType":"module"}