{"ast":null,"code":"import { purchasedStocks, purchasedStock, addPurchasedStock, updatePurchasedStock, removePurchasedStock } from '../api/index.js';\nimport { GET_ALL_PURCHASED, GET_ONE_PURCHASED, ADD_PURCHASED, UPDATE_PURCHASED, REMOVE_PURCHASED, PURCHASED_ERROR_OCCURRED } from '../constants/actions';\n\n// GET /purchased\nexport const getPurchases = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await purchasedStocks();\n    dispatch({\n      type: GET_ALL_PURCHASED,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: \"Investment server is down!\"\n      });\n    }\n  }\n};\n\n// GET /purchased/:id\nexport const getPurchase = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await purchasedStock(id);\n    dispatch({\n      type: GET_ONE_PURCHASED,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: \"Investment server is down!\"\n      });\n    }\n  }\n};\n\n// POST /purchased\nexport const addPurchase = (formInput, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await addPurchasedStock(formInput);\n    dispatch({\n      type: ADD_PURCHASED,\n      payload: data\n    });\n    router.push({\n      pathname: `/purchased/${data.stock}`,\n      state: {\n        updated: true\n      }\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: \"Investment server is down!\"\n      });\n    }\n  }\n};\n\n// PATCH /purchased/:id\nexport const updatePurchase = (id, formInput, router, sharesBought, sharesHeld) => async dispatch => {\n  try {\n    const {\n      data\n    } = await updatePurchasedStock(id, formInput);\n    dispatch({\n      type: UPDATE_PURCHASED,\n      payload: data\n    });\n    if (sharesBought < 0 && Math.abs(sharesBought) >= sharesHeld) {\n      router.push({\n        pathname: '/purchased/',\n        state: {\n          updated: true\n        }\n      });\n      return;\n    }\n    router.push({\n      pathname: `/purchased/${id}`,\n      state: {\n        updated: true\n      }\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: \"Investment server is down!\"\n      });\n    }\n  }\n};\n\n// DELETE /purchased/:id\nexport const removePurchase = (id, router) => async dispatch => {\n  try {\n    await removePurchasedStock(id);\n    dispatch({\n      type: REMOVE_PURCHASED,\n      payload: null\n    });\n    router.push({\n      pathname: '/purchased/',\n      state: {\n        updated: true\n      }\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: PURCHASED_ERROR_OCCURRED,\n        payload: \"Investment server is down!\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["purchasedStocks","purchasedStock","addPurchasedStock","updatePurchasedStock","removePurchasedStock","GET_ALL_PURCHASED","GET_ONE_PURCHASED","ADD_PURCHASED","UPDATE_PURCHASED","REMOVE_PURCHASED","PURCHASED_ERROR_OCCURRED","getPurchases","dispatch","data","type","payload","error","response","message","getPurchase","id","addPurchase","formInput","router","push","pathname","stock","state","updated","updatePurchase","sharesBought","sharesHeld","Math","abs","removePurchase"],"sources":["C:/Users/Shrey Vegad/Desktop/GITHUB/Mock-Stocks/frontend/src/actions/purchased.js"],"sourcesContent":["import { purchasedStocks, purchasedStock, addPurchasedStock, updatePurchasedStock, removePurchasedStock } from '../api/index.js';\r\nimport { GET_ALL_PURCHASED, GET_ONE_PURCHASED, ADD_PURCHASED, UPDATE_PURCHASED, REMOVE_PURCHASED, PURCHASED_ERROR_OCCURRED } from '../constants/actions';\r\n\r\n// GET /purchased\r\nexport const getPurchases = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await purchasedStocks();\r\n    dispatch({ type: GET_ALL_PURCHASED, payload: data });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: \"Investment server is down!\" });\r\n    }\r\n  }\r\n};\r\n\r\n// GET /purchased/:id\r\nexport const getPurchase = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await purchasedStock(id);\r\n    dispatch({ type: GET_ONE_PURCHASED, payload: data });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: \"Investment server is down!\" });\r\n    }\r\n  }\r\n};\r\n\r\n// POST /purchased\r\nexport const addPurchase = (formInput, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await addPurchasedStock(formInput);\r\n    dispatch({ type: ADD_PURCHASED, payload: data });\r\n    router.push({ pathname: `/purchased/${data.stock}`, state: { updated: true } });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: \"Investment server is down!\" });\r\n    }\r\n  }\r\n};\r\n\r\n// PATCH /purchased/:id\r\nexport const updatePurchase = (id, formInput, router, sharesBought, sharesHeld) => async (dispatch) => {\r\n  try {\r\n    const { data } = await updatePurchasedStock(id, formInput);\r\n    dispatch({ type: UPDATE_PURCHASED, payload: data });\r\n    if (sharesBought < 0 && (Math.abs(sharesBought) >= sharesHeld)) {\r\n      router.push({ pathname: '/purchased/', state: { updated: true } });\r\n      return;\r\n    }\r\n    router.push({ pathname: `/purchased/${id}`, state: { updated: true } });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: \"Investment server is down!\" });\r\n    }\r\n  }\r\n};\r\n\r\n// DELETE /purchased/:id\r\nexport const removePurchase = (id, router) => async (dispatch) => {\r\n  try {\r\n    await removePurchasedStock(id);\r\n    dispatch({ type: REMOVE_PURCHASED, payload: null });\r\n    router.push({ pathname: '/purchased/', state: { updated: true } });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: PURCHASED_ERROR_OCCURRED, payload: \"Investment server is down!\" });\r\n    }\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}