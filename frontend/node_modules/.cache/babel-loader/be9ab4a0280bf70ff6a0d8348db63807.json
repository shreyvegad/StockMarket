{"ast":null,"code":"import { fetchStocks, fetchStock } from '../api/index.js';\nimport { GET_ALL_STOCKS, GET_ONE_STOCK, MARKET_ERROR_OCCURRED } from '../constants/actions';\n\n// GET /stocks\nexport const getStocks = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await fetchStocks();\n    dispatch({\n      type: GET_ALL_STOCKS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: MARKET_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: MARKET_ERROR_OCCURRED,\n        payload: \"Markets are down!\"\n      });\n    }\n  }\n};\n\n// GET /stocks/:id\nexport const getStock = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await fetchStock(id);\n    dispatch({\n      type: GET_ONE_STOCK,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: MARKET_ERROR_OCCURRED,\n        payload: error.response.data.message\n      });\n    } else {\n      dispatch({\n        type: MARKET_ERROR_OCCURRED,\n        payload: \"Markets are down!\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["fetchStocks","fetchStock","GET_ALL_STOCKS","GET_ONE_STOCK","MARKET_ERROR_OCCURRED","getStocks","dispatch","data","type","payload","error","response","message","getStock","id"],"sources":["C:/Users/Shubham/Desktop/GitClone/StockMarket/frontend/src/actions/stocks.js"],"sourcesContent":["import { fetchStocks, fetchStock } from '../api/index.js';\r\nimport { GET_ALL_STOCKS, GET_ONE_STOCK, MARKET_ERROR_OCCURRED } from '../constants/actions';\r\n\r\n// GET /stocks\r\nexport const getStocks = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await fetchStocks();\r\n    dispatch({ type: GET_ALL_STOCKS, payload: data });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: MARKET_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: MARKET_ERROR_OCCURRED, payload: \"Markets are down!\" });\r\n    }\r\n  }\r\n};\r\n\r\n// GET /stocks/:id\r\nexport const getStock = (id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await fetchStock(id);\r\n    dispatch({ type: GET_ONE_STOCK, payload: data });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      dispatch({ type: MARKET_ERROR_OCCURRED, payload: error.response.data.message });\r\n    } else {\r\n      dispatch({ type: MARKET_ERROR_OCCURRED, payload: \"Markets are down!\" });\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,UAAU,QAAQ,iBAAiB;AACzD,SAASC,cAAc,EAAEC,aAAa,EAAEC,qBAAqB,QAAQ,sBAAsB;;AAE3F;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACjD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,WAAW,EAAE;IACpCM,QAAQ,CAAC;MAAEE,IAAI,EAAEN,cAAc;MAAEO,OAAO,EAAEF;IAAK,CAAC,CAAC;EACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;MAClBL,QAAQ,CAAC;QAAEE,IAAI,EAAEJ,qBAAqB;QAAEK,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;MAAQ,CAAC,CAAC;IACjF,CAAC,MAAM;MACLN,QAAQ,CAAC;QAAEE,IAAI,EAAEJ,qBAAqB;QAAEK,OAAO,EAAE;MAAoB,CAAC,CAAC;IACzE;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,QAAQ,GAAIC,EAAE,IAAK,MAAOR,QAAQ,IAAK;EAClD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,UAAU,CAACa,EAAE,CAAC;IACrCR,QAAQ,CAAC;MAAEE,IAAI,EAAEL,aAAa;MAAEM,OAAO,EAAEF;IAAK,CAAC,CAAC;EAClD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,QAAQ,EAAE;MAClBL,QAAQ,CAAC;QAAEE,IAAI,EAAEJ,qBAAqB;QAAEK,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;MAAQ,CAAC,CAAC;IACjF,CAAC,MAAM;MACLN,QAAQ,CAAC;QAAEE,IAAI,EAAEJ,qBAAqB;QAAEK,OAAO,EAAE;MAAoB,CAAC,CAAC;IACzE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}